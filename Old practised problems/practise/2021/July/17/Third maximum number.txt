class Solution {
public:
    int thirdMax(vector<int>& nums) {
        
        // Time complexity = O(n), Space = O(1)
        long max1=LONG_MIN;
        long max2=LONG_MIN;
        long max3=LONG_MIN;
        
        for(int i=0;i<nums.size();i++){
            if(nums[i]==max1 || nums[i]==max2 || nums[i]==max3)
                continue;
            if(max1 == INT_MIN || nums[i]>max1){
                max3 = max2;
                max2 = max1;
                max1 = nums[i];
            }else if(max2 == INT_MIN || nums[i]>max2){
                max3 = max2;
                max2 = nums[i];
            }else if(max3 == INT_MIN || nums[i]>max3){
                max3 = nums[i];
            }
        }
        return max3==LONG_MIN?max1:max3;
        /*
        set<int>set;
        for(auto val:nums)
            set.insert(val);
        auto it = set.begin();
        if(set.size() >= 3){
            it = set.end();
            int tmp=3;
            while(tmp--)
                it--;
            
            return *it;
        }
        else{
            it = set.end();
            it--;
            return *it;
        }
        */
        
    }
};