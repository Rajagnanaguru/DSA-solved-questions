class Solution {
public:
    vector<int> fairCandySwap(vector<int>& aliceSizes, vector<int>& bobSizes) {
        
        // Time complexity - O(nlogn)
        // Can make into O(n) if we use set for bob
        vector<int>res;
        int asum=0;
        int bsum=0;
        
        sort(bobSizes.begin(),bobSizes.end()); // Sorting the Bob's vector (for binary search)
        for(auto val:aliceSizes)    // Calculating the Alice's vector total
            asum+=val;  
        
        for(auto val:bobSizes)  // Calculating the Bob's vector total
            bsum+=val;
        
        int tmp = (bsum-asum)/2;  // A variable used to store the difference
        
        for(int i=0;i<aliceSizes.size();i++){
           
            if(binary_search(bobSizes.begin(),bobSizes.end(), aliceSizes[i]+tmp)){ // Searching the matching element in Bob's vector ie. alicseSizes[i]+tmp)
                res.push_back(aliceSizes[i]);
                res.push_back(aliceSizes[i]+tmp);
                return res;
            }
        }
        return res;
    }
};