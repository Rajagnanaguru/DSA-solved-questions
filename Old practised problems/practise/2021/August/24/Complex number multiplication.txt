class Solution {
public:
    string complexNumberMultiply(string num1, string num2) {
        int a=0,b=0,c=0,d=0;
        int nega=1, negb=1, negc=1, negd=1;
        int x,y;
        
        int div = 1;
        int tmp;
        int flag = 0;
        for(char ch: num1)
            if(ch != '+' && ch !='-' && flag == 0){
                tmp = ch-'0';
                a = a*10 + tmp;
            }else if(flag == 1 && ch == '-')
                negb = -1;
            else if(flag == 0 && ch == '-')
                nega = -1;
            else if(ch != '+' && ch != 'i' && flag == 1){
                tmp = ch-'0';
                b = b*10 + tmp;
            }
            else if(ch == '+')
                flag = 1;
            else
                break;
            
        flag = 0;
        for(char ch: num2)
            if(ch != '+' && ch !='-' && flag == 0){
                tmp = ch-'0';
                c = c*10 + tmp;
            }else if(flag == 1 && ch == '-')
                negd = -1;
            else if(flag == 0 && ch == '-')
                negc = -1;
            else if(ch != '+' && ch != 'i' && flag == 1){
                tmp = ch-'0';
                d = d*10 + tmp;
            }
            else if(ch == '+')
                flag = 1;
            else
                break;
        
        a = nega*a;
        b = negb*b;
        c = negc*c;
        d = negd*d;
        
        cout<<"A:"<<a<<" "<<b<<" "<<c<<" "<<d<<"\n";
        
        
        x = a*c - b*d;
        y = b*c + a*d;
        
        cout<<x<<"\n";
        cout<<y;
        string res;
        
        res+= to_string(x);
        res.push_back('+');
        res+= to_string(y);
        res.push_back('i');
        return res;
    }
};