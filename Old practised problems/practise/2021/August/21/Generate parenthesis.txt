class Solution {
public:
    map<int,set<string>>dp;
    vector<string> generateParenthesis(int n) {
        vector<string>res;
        string s = "()";
        set<string>dum;
        dum.insert(s);
        dp[1]=dum;
        for(int i=2;i<=n;i++){
            set<string>curr;
    
            for(int r = i-1;r>=1;r--){ // For right side
                set<string>right = dp[r];
                int l = i-r;
                set<string>left = dp[l];
                
                for(auto s: dp[i-1])
                    curr.insert('('+s+')');
                
                for(auto lf: left)
                for(auto rt: right){
                    string t = lf+rt;
                    curr.insert(t);
                }
            }
            dp[i] = curr;
        }
        for(auto s: dp[n])
            res.push_back(s);
        
        
        return res;
    }
};