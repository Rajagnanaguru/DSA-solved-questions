/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>>res;
        queue<TreeNode*>q;
        
        if(root != NULL)
            q.push(root);
        else
            return res;
        
        vector<TreeNode*>tmp;
        vector<int>t;
        while(!q.empty()){
            tmp.clear();
            t.clear();
            while(!q.empty()){
                TreeNode* curr = q.front();
                t.push_back(curr->val);
                if(curr->left)
                    tmp.push_back(curr->left);
                if(curr->right)
                    tmp.push_back(curr->right);
                q.pop();    
            }
            for(auto val: tmp)
                q.push(val);
            res.push_back(t);   
        }
        
        return res;
    }
};