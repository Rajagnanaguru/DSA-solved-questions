/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int>>res;
        queue<Node*>q;
        
        
        if(root != NULL)
            q.push(root);
        else
            return res;
        
        vector<Node*>tmp;
        vector<int>t;
        while(!q.empty()){
            tmp.clear();
            t.clear();
            while(!q.empty()){
                Node* curr = q.front();
                t.push_back(curr->val);
                for(int i=0;i<curr->children.size();i++)
                    tmp.push_back(curr->children[i]);
                q.pop();    
            }
            for(auto val: tmp)
                q.push(val);
            res.push_back(t);   
        }
        
        return res;
    }
};