// Time complexity - O(n)

class Solution {
public:
    bool buddyStrings(string s, string goal) {
        char char1 = ' ', char2 = ' ';
        int n = s.length();
        int n1 = goal.length();
        
        if(n != n1)
            return false;
            
        int mismatch = 0;
        int found = 0;
        int flag = 0;

        vector<int>freq(26, 0);

        for(int i=0; i<n; i++){
            freq[s[i] - 'a']++;

            if(s[i] == goal[i])
                continue;
            else{
                mismatch++;

                if(flag == 0){
                    char1 = s[i];
                    char2 = goal[i];

                    flag = 1;
                }else{
                    if(goal[i] == char1 && s[i] == char2)
                        found++;
                    else
                        return false;
                }
            }
        }

        if(found == 0 && flag == 0){
            for(int i=0; i<26; i++){
                if(freq[i] > 1)
                    return true;
            }
        }

        if(found == 1 && mismatch == 2)
            return true;
        return false;
    }
};