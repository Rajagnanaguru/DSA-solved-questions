class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int res = 0;
        int n = nums.size();
        
        int l=0, r=n-1;
        int mid;
        
        while(l<r){
            mid = (l+r)/2;
            // cout << "First l: "<<l<<" r: "<<r<<" and mid: "<<mid<<"\n";
            if(target == nums[mid])
                return mid;
            
            if(nums[r] == target)
                return r;
            
            if(target > nums[mid])
                l = mid;
            else
                r = mid;
            
            mid = (l+r)/2;
            // cout << "l: "<<l<<" r: "<<r<<" and mid: "<<mid<<"\n";
            
            if(l == mid){
                if(target == nums[mid])
                    return mid;
                
                if(nums[l] < target && target < nums[r])
                    return r;
                else if(nums[l] < target && nums[r] < target)
                    return r+1;
                else if(target < nums[l])
                    return l;
            }
            
            
        }
        
        if(l == r){
            if(target == nums[l])
                return l;
            else if(target > nums[l])
                return l+1;
            else
                return l;
        }
        
        return r;
    }
};