/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<TreeNode*>>paths;
    
    void traverse(TreeNode* root, vector<TreeNode*>tillnow){
        if(root == NULL)
            return;
        
        tillnow.push_back(root);
        traverse(root->left, tillnow);
        traverse(root->right, tillnow);
        
        if(root->left == NULL && root->right == NULL)
            paths.push_back(tillnow);
    }
    
    int sumRootToLeaf(TreeNode* root) {
        vector<TreeNode*> dum;
        traverse(root, dum);
        int res = 0;
        
        for(vector<TreeNode*> p: paths){
            reverse(p.begin(), p.end());
            
            int num = 0;
            int mul = 1;
            for(TreeNode* t: p){
                num +=  (t->val)*mul;
                mul *= 2;
            }
            
            res += num;
        }
        
        return res;
    }
};