class Solution {
public:
    vector<int> targetIndices(vector<int>& nums, int target) {
        sort(nums.begin(), nums.end());
        vector<int> res;
        
        int n = nums.size();
        
        int l=0;
        int r=n-1;
        int mid = (l+r)/2;
        
        if(n == 1){
            if(nums[0] == target){
                res.push_back(0);
                return res;
            }else
                return res;
        }
        
        for(auto val: nums)
            cout<<val<<" ";
        cout<<"\n";
        
        while(l < r){
            //cout<<"l: "<<l<<"r: "<<r<<" mid:"<<mid<<"\n";
            mid = (l+r)/2;
            
            if(target == nums[mid]){
               // cout<<"Got in mid\n";
                l = mid-1;
                r = mid+1;
                res.push_back(mid);
                
                while(l>=0 && nums[l] == target){
                    res.push_back(l);
                    l--;
                }
                
                while(r<=n-1 && nums[r] == target){
                    res.push_back(r);
                    r++;
                }
                
                break;
            }
            
            if(target == nums[r]){
                l = r-1;
                //cout<<"Got in r\n"<<"L: "<<l<<"r: "<<r<<"\n";
                while(r<=n-1 && nums[r] == target){
                    res.push_back(r);
                    r++;
                }
                
                while(l>=0 && nums[l] == target){
                    res.push_back(l);
                    l--;
                }
                break;
            }
            
            
            
            if(mid == l)
                break;
            
            if(nums[mid] > target)
                r = mid;
            else if(nums[mid] < target)
                l = mid;
           
        }
        
        sort(res.begin(), res.end());
        return res;
    }
};