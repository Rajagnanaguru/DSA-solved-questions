/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        vector<double>res;
        
        vector<TreeNode*>all;
        all.push_back(root);
        
        while(!all.empty()){
            double tot = 0;
            vector<TreeNode*>curr;
            for(TreeNode* t: all){
                if(t != NULL){
                    tot += t->val;
                    
                    if(t->left != NULL)
                        curr.push_back(t->left);
                    if(t->right != NULL)
                        curr.push_back(t->right);
                }
            }
            
            double aver = tot/(all.size());
            res.push_back(aver);
            
            all = curr;
        }
        
        return res;
    }
};