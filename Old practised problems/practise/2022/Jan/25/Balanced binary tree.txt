/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
int height(TreeNode* root){
    int val = -1;
    int l = 0;
    int r = 0;
    
    if(root == NULL)
        return val;
    
    if(root->left != NULL)
        l = 1 + height(root->left);
    
    if(root->right != NULL)
        r = 1 + height(root->right);
    
    return max(l, r);
}

class Solution {
public:
    bool isBalanced(TreeNode* root) {
        if(root == NULL)
            return true;
        
        int l = height(root->left);
        int r = height(root->right);
        
        if(abs(l-r) <= 1)
            return isBalanced(root->left) && isBalanced(root->right);
        
        return false;
    }
};