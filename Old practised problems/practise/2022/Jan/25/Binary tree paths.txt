/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<string>res;
    void traverse(TreeNode* root, string curr){
        if(root == NULL)
            return;
        if(root->left == NULL && root->right == NULL){
            curr += "->";
            curr += to_string(root->val);
            
            res.push_back(curr);   
            return;
        }
        
        curr += "->";
        int val = root->val;
        string s = to_string(val);
        curr += s;
        
        traverse(root->left, curr);
        traverse(root->right, curr);
    }
    
    vector<string> binaryTreePaths(TreeNode* root) {
        string s;
        
        s = to_string(root->val);
        if(root->left == NULL && root->right == NULL){
            res.push_back(s);
        }else{
            traverse(root->left, s);
            traverse(root->right, s);
        }
        
        return res;
    }
};