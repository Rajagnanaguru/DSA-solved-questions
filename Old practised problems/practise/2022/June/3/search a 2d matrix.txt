class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int row = matrix.size();
        int col = matrix[0].size();
        
        int l = 0;
        int r = row-1;
        int mid;
        
        int rfound = 0;
        
        while(l <= r){
            mid = (l+r)/2;
            
            cout << "l in: "<< l << "   r:"<<r<<"    mid: "<<mid<<"\n";            
            
            if(matrix[mid][0] == target){
                rfound = mid;
                return true;
                break;
            }
            
            if(matrix[mid][0] > target)
                r = mid-1;
            else if(matrix[mid][0] < target)
                l = mid+1;
        }
        
        cout << "l: "<<l-1<<"\n";
        rfound = l-1;
        
        if(rfound < 0)
            return false;
        
        l = 0;
        r = col-1;
        
        while(l <= r){
            mid = (l+r)/2;
            
            cout << "l in: "<< l << "   r:"<<r<<"    mid: "<<mid<<"\n";            
            
            if(matrix[rfound][mid] == target){
                return true;
            }
            
            if(matrix[rfound][mid] > target)
                r = mid-1;
            else if(matrix[rfound][mid] < target)
                l = mid+1;
        }
        
        return false;
    }
};