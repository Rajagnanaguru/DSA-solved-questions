class Solution {
public:
    bool isSame(vector<int>a, vector<int>b){
        for(int i=0; i<26; i++)
            if(a[i] != b[i])
                return false;
        return true;
    }
    
    vector<int> findAnagrams(string s, string p) {
        vector<int> res;
        int n1 = s.length();
        int n2 = p.length();
        
        vector<int>s1(26,0);
        vector<int>s2(26,0);
        
        for(auto c: p){
            int val = c -'a';
            s2[val]++;
        }
        
        string sub = s.substr(0, n2);
        for(auto c: sub){
            int val = c - 'a';
            s1[val]++;
        }
        
        // for(auto c: s1)
        //         cout<<c<<" ";
        //     cout<<"\nsecond\n";
        // for(auto c: s2)
        //         cout<<c<<" ";
        if(isSame(s1, s2)){
            
            res.push_back(0);
        }
        
        for(int i=1; i<n1-n2+1; i++){
            s1[s[i-1]-'a']--;
            s1[s[i+n2-1]-'a']++;
            
            if(isSame(s1, s2))
                res.push_back(i);
        }
        
        return res;
    }
};