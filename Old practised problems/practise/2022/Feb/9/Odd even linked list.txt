/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        ListNode *odd = NULL, *even=NULL, *oddptr = NULL, *evenptr = NULL;
        
        int index = 0;
        ListNode* tmp = head;
        
        while(tmp){
            if(index == 0){
                even = tmp;
                evenptr = tmp;
            }else if(index == 1){
                odd = tmp;
                oddptr = tmp;
            }else{
                if(index%2 == 0){
                    evenptr->next = tmp;
                    evenptr = evenptr->next;
                }else{
                    oddptr->next = tmp;
                    oddptr = oddptr->next;
                }
            }
            
            tmp = tmp->next;
            index++;
        }
        
        if(oddptr)
            oddptr->next = NULL;
        
        if(evenptr)
            evenptr->next = odd;
    
        return even;
    }
};