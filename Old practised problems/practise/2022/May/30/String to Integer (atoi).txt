class Solution {
public:
    int myAtoi(string s) {
        int res = 0;
        
        int sign = 1;
        stack<int>num;
        
        int n = s.length();
        
        // Remove leading whitespaces
        int i=0;
        while(i<n && s[i] == ' ')
            i++;
        
        // Check the sign
        if(i<n && (s[i] == '-' || s[i] == '+')){
            if(s[i] == '-')
                sign = -1;
            i++;
        }
        
        while(i<n && s[i] == '0')
            i++;
        
        
        while(i<n && (s[i] >= '0' && s[i] <= '9')){
            // cout << "pushed " << s[i] << "\n";
            num.push(s[i++]-'0');
        }
        
        long tmp = 0;
        long mul = 1;
        
        while(!num.empty()){
            int top = num.top();
            num.pop();
            
            tmp += top*mul;
            mul *= 10;
            
            // cout << "tmp now:" << tmp << "\n";
            
            if(tmp > INT_MAX || mul/10 > INT_MAX){
                if(sign == -1)
                    return INT_MIN;
                return INT_MAX;
            }
        }
        
        return sign*tmp;
    }
};