/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool hasOne(TreeNode *root){
        if(root == NULL)
            return false;
        
        if(root->left == NULL && root->right == NULL){
            if(root->val == 1)
                return true;
            return false;
        }
        
        bool left = hasOne(root->left);
        bool right = hasOne(root->right);
        
        if(!left)
            root->left = NULL;
        if(!right)
            root->right = NULL;
        
        if(root->val == 1)
            return true;
        
        return left | right;
    }
    
    
    TreeNode* pruneTree(TreeNode* root) {
        bool ok = hasOne(root);
        
        if(ok)
            return root;
        
        return NULL;
    }
};