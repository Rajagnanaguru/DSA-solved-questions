class Solution {
public:
    int noofdig(int val){
        return log2(val) + 1;    
    }
    
    int concatenatedBinary(int n) {
        long long sum = 0;
        long long mul = 0;
        
        long long mod = 1e9 + 7;
        
        for(long long i=1; i<=n; i++){
            mul = noofdig(i);
            sum = sum*pow(2, mul) + i;
            
            sum = sum % mod;
        }   

        return sum;
    }
};


// TC -> O(n)
class Solution {
public:
    int concatenatedBinary(int n) {
        long long res = 0;
        
        int len = 0;
        long long mod = 1e9 + 7;
        
        for(int i=1; i<=n; i++){
            if((i & (i-1)) == 0) // if i is divisible by 2, increment length by 1
                len++;
            
            res = (res << len) + i;
            
            res = res % mod;
        }
        
        return res;
    }
};
